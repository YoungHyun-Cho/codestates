{"version":3,"sources":["components/Login.js","components/Mypage.js","App.js","index.js"],"names":["Login","props","state","username","password","inputHandler","bind","loginRequestHandler","e","this","setState","target","name","value","axios","post","userId","withCredentials","then","res","console","log","loginHandler","className","onChange","type","onClick","Component","Mypage","cookie","split","email","decodeURIComponent","App","isLogin","setCookie","document","ReactDOM","render","getElementById"],"mappings":"iQA+EeA,E,kDA3Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,SAAU,IAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAPV,E,yDAUNE,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,U,4CAGrB,IAAD,SACWJ,KAAKP,MAA5BC,EADY,EACZA,SAAUC,EADE,EACFA,SAclBU,IACGC,KACC,qCACA,CACEC,OAAQb,EACRC,SAAUA,GAEZ,CAAE,eAAgB,mBAAoBa,iBAAiB,IAExDC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKlB,MAAMqB,cAAa,Q,+BAIpB,IAAD,OACP,OACE,sBAAKC,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,2CACA,uBACEX,KAAK,WACLY,SAAU,SAAChB,GAAD,OAAO,EAAKH,aAAaG,IACnCK,MAAOJ,KAAKP,MAAMC,SAClBsB,KAAK,YAGT,sBAAKF,UAAU,aAAf,UACE,2CACA,uBACEX,KAAK,WACLY,SAAU,SAAChB,GAAD,OAAO,EAAKH,aAAaG,IACnCK,MAAOJ,KAAKP,MAAME,SAClBqB,KAAK,gBAGT,qBAAKF,UAAU,gBAAf,SACE,wBAAQG,QAASjB,KAAKF,oBAAqBgB,UAAU,cAArD,4B,GAnEUI,a,QC6BLC,MAhCf,SAAgB3B,GACdmB,QAAQC,IAAI,UAAWpB,EAAM4B,QADR,MAEC5B,EAAM4B,OAAOC,MAAM,MAFpB,mBAEhBd,EAFgB,KAERe,EAFQ,KAOrB,OAHAf,EAASA,EAAOc,MAAM,KAAK,GAC3BC,EAAQC,mBAAmBD,EAAMD,MAAM,KAAK,IAG1C,8BACE,sBAAKP,UAAU,kBAAf,UACE,qBAAKA,UAAU,QAAf,oBACA,uBACA,uBACA,uBACA,mEACS,sBAAMA,UAAU,OAAhB,SAAwBP,IADjC,kFAKA,uBACA,uBACA,sBAAKO,UAAU,OAAf,UACE,sBAAMA,UAAU,OAAhB,sDADF,IAC4CP,KAE5C,sBAAKO,UAAU,OAAf,UACE,sBAAMA,UAAU,OAAhB,4DADF,IAC6CQ,WC2BtCE,G,wDA7Cb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXgC,SAAS,EACTL,OAAQ,MAEV,EAAKP,aAAe,EAAKA,aAAahB,KAAlB,gBACpB,EAAK6B,UAAY,EAAKA,UAAU7B,KAAf,gBAPA,E,sDAUTuB,GACRpB,KAAKC,SAAS,CACZmB,OAAQA,M,sCAKLpB,KAAKP,MAAM2B,QAAUO,SAASP,SACjCpB,KAAK0B,UAAUC,SAASP,QACxBpB,KAAKa,gBAEPb,KAAKC,SAAS,CACZwB,SAAS,M,+BAIH,IAAD,EACqBzB,KAAKP,MAAzBgC,EADD,EACCA,QAASL,EADV,EACUA,OACjB,OACE,cAAC,IAAD,UACE,qBAAKN,UAAU,MAAf,SACGW,EACC,cAAC,EAAD,CAAQL,OAAQA,IAEhB,cAAC,EAAD,CACEM,UAAW1B,KAAK0B,UAChBb,aAAcb,KAAKa,uB,GArCfK,cCDlBU,IAASC,OAAO,cAAC,EAAD,IAASF,SAASG,eAAe,W","file":"static/js/main.7bc39462.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n    this.inputHandler = this.inputHandler.bind(this);\n    this.loginRequestHandler = this.loginRequestHandler.bind(this);\n  }\n\n  inputHandler(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  loginRequestHandler() {\n    const { username, password } = this.state;\n    // username && password\n    //   ? axios.post(\"http://localhost:4000/type_of_login\")\n    //   : alert(\"username 혹은 password 칸이 비어있습니다!\");\n\n    // axios.post(주소).then(여기에서 제대로 된 response가 올 경우엔\n    // App 컴포넌트의 isLogin 상태를 true로 바꿔준다)\n    // alert는 테스트케이스 작성을 위해선 빼야할것같음.\n\n    // 임시 로그인상태 변경\n    // if (username && password) {\n    //   this.props.loginHandler(true);\n    // }\n\n    axios\n      .post(\n        'https://localhost:4000/users/login',\n        {\n          userId: username,\n          password: password,\n        },\n        { 'Content-Type': 'application/json', withCredentials: true }\n      )\n      .then((res) => {\n        console.log(res);\n        this.props.loginHandler(true);\n      });\n  }\n\n  render() {\n    return (\n      <div className='loginContainer'>\n        <div className='inputField'>\n          <div>Username</div>\n          <input\n            name='username'\n            onChange={(e) => this.inputHandler(e)}\n            value={this.state.username}\n            type='text'\n          />\n        </div>\n        <div className='inputField'>\n          <div>Password</div>\n          <input\n            name='password'\n            onChange={(e) => this.inputHandler(e)}\n            value={this.state.password}\n            type='password'\n          />\n        </div>\n        <div className='passwordField'>\n          <button onClick={this.loginRequestHandler} className='passwordBtn'>\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","function Mypage(props) {\n  console.log('cookies', props.cookie);\n  let [userId, email] = props.cookie.split('; ');\n\n  userId = userId.split('=')[1];\n  email = decodeURIComponent(email.split('=')[1]);\n\n  return (\n    <div>\n      <div className='mypageContainer'>\n        <div className='title'>Mypage</div>\n        <hr />\n        <br />\n        <br />\n        <div>\n          안녕하세요. <span className='name'>{userId}</span>님! 로그인이\n          완료되었습니다.\n        </div>\n\n        <br />\n        <br />\n        <div className='item'>\n          <span className='item'>나의 유저 네임: </span> {userId}\n        </div>\n        <div className='item'>\n          <span className='item'>나의 이메일 주소: </span> {email}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mypage;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Mypage from './components/Mypage';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      cookie: null,\n    };\n    this.loginHandler = this.loginHandler.bind(this);\n    this.setCookie = this.setCookie.bind(this);\n  }\n\n  setCookie(cookie) {\n    this.setState({\n      cookie: cookie,\n    });\n  }\n\n  loginHandler() {\n    if (!this.state.cookie && document.cookie) {\n      this.setCookie(document.cookie);\n      this.loginHandler();\n    }\n    this.setState({\n      isLogin: true,\n    });\n  }\n\n  render() {\n    const { isLogin, cookie } = this.state;\n    return (\n      <Router>\n        <div className='App'>\n          {isLogin ? (\n            <Mypage cookie={cookie} />\n          ) : (\n            <Login\n              setCookie={this.setCookie}\n              loginHandler={this.loginHandler}\n            />\n          )}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}